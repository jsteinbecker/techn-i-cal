-- file
-----------------------------------------
-- WORKDAY VIEW // 
-- INTERACTIVE SCRIPTING
-----------------------------------------
-- author: JOSH STEINBECKER
-----------------------------------------

behavior Slot
    on click
        if .active exists 
            if .active in me == false
                trigger checkAndAssign
            end
        end
    on dragover 
        add .dragged-over
        end
    on dragend or dragleave or drop 
        send hideHint to .slot
        remove .dragged-over
    on drop 
        trigger checkAndAssign
        end 
    on showHint 
        if first .active@data-available includes @data-shift
            add .text-emerald-300 to .shift-name in me
        else 
            transition my *opacity to 20% over 500ms
        end
    on hideHint 
        remove .text-emerald-300 from .shift-name in me
        transition my *opacity to 100% over 300ms
        end
    on checkAndAssign 
        set incomingEmployee to .active 
        set avble to incomingEmployee@data-available
        send hideHint to .slot
        tell .employee 
                transition *scale to 1 over 100ms 
            end
        if @data-shift is in avble[0].split(' ')
            set empId to incomingEmployee@data-employee-id
            put incomingEmployee at the end of me
            then remove .active from (.employee in me)
            then fetch `${@data-shift}/${empId}/assign/` then 
            call showToast(result,"success")
            if (.employee in me).length > 1
                send showAccepted to (.employee in me)[1]
                send showBooted to (.employee in me)[0]
                put (.employee in me)[0] at the start of #ScrollingDeck
            end
        else call 
            alert(`${@data-shift} not in ${incomingEmployee@data-employee-id}'s available shifts [${incomingEmployee@data-available}]`)
        end

behavior Employee 
    init 
        if #pto-list.dataset.employees contains @data-employee-id
            add @data-pto to me then 
            set @data-pto to true then
            make a <span.pto-flag/> then put 'PTO' into it then 
            append it to the end of me 
            end
        if @data-week-hours == null 
            set @data-week-hours to 0
        else set @data-week-hours to @data-week-hours as Int
            end
        if @data-period-hours == null 
            set @data-period-hours to 0
        else set @data-period-hours to @data-period-hours as Int
            end
        put `${@data-week-hours}/${@data-period-hours} hrs` into .hours-display in me 
        end
    on click 
        if I do not match .active
            transition .active*scale to 1 over 200ms
            take .active from .employee 
            then transition my *scale to 1.25 over 300ms
            then send hideHint to .slot
            then send showHint to .slot
            then log JSON.stringify(me.dataset, null, 2)
        else 
            remove .active 
            then transition my *scale to 1 over 300ms
            then send hideHint to .slot
            end
        end
    on dragstart 
        take .active from .employee 
        then if I do not match .active 
            add .active to me 
        then send hideHint to .slot
        then send showHint to .slot
        then log @data-available
        end 
    on dragend 
        remove .active 
        then send hideHint to .slot
        end
    on showBooted 
        repeat for i in [1,2,3,4]
            add .bg-amber-700 
            then wait 300ms
            then remove .bg-amber-700 
            then wait 300ms
            end
        end
    on showAccepted
        repeat for i in [1,2,3,4]
            add .bg-emerald-700 
            then wait 300ms
            then remove .bg-emerald-700 
            then wait 300ms
            end
        end
    end



  