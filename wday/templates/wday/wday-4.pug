extends 'base.html'

mixin nextWd(workday)
    a(href=workday.nextWD().url())
        i.fas.fa-chevron-right.opacity-40.text-xs.px-2

mixin prevWd(workday)
    a(href=workday.prevWD().url())
        i.fas.fa-chevron-left.opacity-40.text-xs.px-2

mixin day-breadcrumbs(workday)
    #breadcrumbs
        a(href=workday.schedule.url())
            | SCHD #{workday.schedule.slug} 
        i.fas.fa-chevron-right.opacity-40.text-xs.px-2
        a(href=workday.period.url()) 
            | PRD #{workday.period.number}
        i.fas.fa-chevron-right.opacity-40.text-xs.px-2
        a(href=workday.week.url())
            | WEEK #{workday.week.number}
        i.fas.fa-chevron-right.opacity-40.text-xs.px-2
        span#wdid(data-value=workday.n()) DAY #{workday.n}

mixin time-icon(daytime)
    if daytime == 'AM'
        i.fas.fa-sun.opacity-30.px-2
    if daytime == 'PM'
        i.fas.fa-moon.opacity-30.px-2
    if daytime == 'XN'
        i.fas.fa-tombstone.opacity-30.px-2

mixin hiddenPtoList(wd)
    div#pto-list.hidden(
        data-employees=' '.join(list(wd.pto_list()))
        )

mixin template-empl-btn(slot)
    if slot.template_employee != slot.employee
        i.fa-solid.fa-street-view.opacity-30(
            _="on click 
                 if slot.template_employee != slot.employee 
                   fetch #{slot.shift}/fill-template/ 
                   put result into me.parentNode 
                   then call window.location.reload() 
                   end
                 if slot.template_employee == slot.employee 
                   call alert('Template Employee is already properly assigned.')
                   end"
            class="hover:text-amber-400 hover:opacity-50"
            )

mixin empl-context-arrows(empl, workday)
    span.absolute.bottom-0.right-0.mr-2.mb-1.fa-2x
        i.fa-solid.fa-play.text-white.opacity-30.rotate-180
        i.fa-solid.fa-play.text-white.opacity-30.px-1

mixin Employee(empl, workday)
    div.employee.relative.bg-slate-700.rounded.p-3.border-white.border.h-24.w-32.m-1(
        draggable='true', 
        data-employee-id=empl.slug,
        data-available=' '.join(list(empl.shifts_available.values_list('name',flat=True))),
        data-week-hours= empl.weekHours(workday.slug),
        data-period-hours= empl.periodHours(workday.slug),
        _='install Employee')
            img(src=empl.image_url draggable="false").w-10.h-10.rounded-full
            span.font-thin.text-sm= empl.name.upper
            div.hours-display
            +empl-context-arrows(empl, workday)
            
mixin Slot(slot)
    if slot.employee == null
        div.slot.h-42.w-72.bg-zinc-900.bg-opacity-50.bg-blur.rounded.border.p-3(
            data-shift=slot.shift.name,
            data-template=slot.template_employee,
            _='install Slot')
                div
                    span.shift-name.font-extrabold.text-lg.opacity-70= slot.shift.name
                    +time-icon(slot.shift.group)
                    if slot.template_employee != null 
                        +template-empl-btn(slot)
    if slot.employee != null
        div.slot.h-42.w-72.bg-zinc-900.bg-opacity-50.bg-blur.rounded.border.p-3(
            data-shift=slot.shift.name,
            data-employee=slot.employee.slug,
            data-template=slot.template_employee,
            _='install Slot')
                div
                    span.shift-name.font-extrabold.text-lg.opacity-70= slot.shift.name
                    +time-icon(slot.shift.group)
                    if slot.template_employee != null 
                        +template-empl-btn(slot)
                +Employee(slot.employee, slot.workday)

block style 
    style.
        .h1              {font-size: 32px; font-family: 'JetBrains Mono';}
        #SlotGrid        {display: grid; grid-template-columns: repeat(4, 1fr); grid-gap: 1rem;@extends .p-3; grid grid-cols-4; @extends .gap-4; @extends .mx-12;}
        #ScrollingDeck   {display: flex; flex-direction: row; overflow-y: scroll; padding: 12px; @extends .mx-12;}
        .active          {background-color: #ccffdd55!important; drop-shadow: 0 0 10px #ccffdd55;}
        .dragged-over    {background-color: #ccffcc33!important;}
        .hours-display   {font-size: 10px; font-family: 'JetBrains Mono'; opacity: 0.5;}
        .pto-flag::after {content: 'PTO'; font-size: 10px; font-family: 'JetBrains Mono'; opacity: 0.5; color: #ff0000; position: absolute; top: 0; right: 0;}
        .badge-top-right {position: absolute; top: 0; right: 0;}

block pre 
    script(type='text/coffeescript', src='/static/wday-pug.coffee') 
    script(type='text/hyperscript',  src='/static/wday-pug._hs')

    script.
        // Get references to the body, .slot, and .employee elements
        const body = document.querySelector('body');
        const slots = document.querySelectorAll('.slot');
        const employees = document.querySelectorAll('.employee');

        // Add a click event listener to the body
        body.addEventListener('click', function(event) {
            
            var activeEmpl = document.querySelectorAll('.active');
            if (event.target.closest(".employee") && activeEmpl.length == 0){
                event.stopPropagation();
                console.log('allowing to drag');
               }
            if (activeEmpl != null) {
                activeEmpl.classList.remove('active');
                // transition scale from 1.25 to 1
                activeEmpl.style.transform = "scale(.8, .8)";
            }
        });

        

//------------------ CONTENT ------------------//

block content 

    +day-breadcrumbs(workday)

    .flex.flex-row 
        +prevWd(workday)
        .h1 #{workday.date} Slots 
        +nextWd(workday)

    #background

        #SlotGrid
            for slot in slots
                +Slot(slot)

        #ScrollingDeck
            for empl in workday.on_deck.all
                +Employee(empl, workday)

    +hiddenPtoList(workday)
            